export { IonBackButton } from './navigation/back-button';
export { IonModal } from './overlays/modal';
export { IonPopover } from './overlays/popover';
export { IonRouterOutlet } from './navigation/router-outlet';
export { IonRouterLink, IonRouterLinkWithHref } from './navigation/router-link-delegate';
export { IonTabs } from './navigation/tabs';
export { provideIonicAngular } from './providers/ionic-angular';
export { ActionSheetController } from './providers/action-sheet-controller';
export { AlertController } from './providers/alert-controller';
export { AnimationController } from './providers/animation-controller';
export { GestureController } from './providers/gesture-controller';
export { LoadingController } from './providers/loading-controller';
export { MenuController } from './providers/menu-controller';
export { ModalController } from './providers/modal-controller';
export { PickerController } from './providers/picker-controller';
export { PopoverController } from './providers/popover-controller';
export { ToastController } from './providers/toast-controller';
export { DomController, NavController, Config, Platform, NavParams, IonicRouteStrategy, } from '@ionic/angular/common';
export { IonNav } from './navigation/nav';
export { IonCheckbox, IonDatetime, IonInput, IonInputOtp, IonIcon, IonRadioGroup, IonRange, IonSearchbar, IonSegment, IonSelect, IonTextarea, IonToggle, } from './directives';
export * from './directives/proxies';
export { 
// UTILS
createAnimation, createGesture, iosTransitionAnimation, mdTransitionAnimation, IonicSlides, getPlatforms, isPlatform, getTimeGivenProgression, IonicSafeString, } from '@ionic/core/components';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zdGFuZGFsb25lL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUNMLGFBQWEsRUFDYixhQUFhLEVBQ2IsTUFBTSxFQUNOLFFBQVEsRUFDUixTQUFTLEVBQ1Qsa0JBQWtCLEdBS25CLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzFDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsV0FBVyxFQUNYLFFBQVEsRUFDUixXQUFXLEVBQ1gsT0FBTyxFQUNQLGFBQWEsRUFDYixRQUFRLEVBQ1IsWUFBWSxFQUNaLFVBQVUsRUFDVixTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsR0FDVixNQUFNLGNBQWMsQ0FBQztBQUN0QixjQUFjLHNCQUFzQixDQUFDO0FBRXJDLE9BQU87QUFDTCxRQUFRO0FBQ1IsZUFBZSxFQUNmLGFBQWEsRUFDYixzQkFBc0IsRUFDdEIscUJBQXFCLEVBQ3JCLFdBQVcsRUFDWCxZQUFZLEVBQ1osVUFBVSxFQUNWLHVCQUF1QixFQXNDdkIsZUFBZSxHQXlDaEIsTUFBTSx3QkFBd0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IElvbkJhY2tCdXR0b24gfSBmcm9tICcuL25hdmlnYXRpb24vYmFjay1idXR0b24nO1xuZXhwb3J0IHsgSW9uTW9kYWwgfSBmcm9tICcuL292ZXJsYXlzL21vZGFsJztcbmV4cG9ydCB7IElvblBvcG92ZXIgfSBmcm9tICcuL292ZXJsYXlzL3BvcG92ZXInO1xuZXhwb3J0IHsgSW9uUm91dGVyT3V0bGV0IH0gZnJvbSAnLi9uYXZpZ2F0aW9uL3JvdXRlci1vdXRsZXQnO1xuZXhwb3J0IHsgSW9uUm91dGVyTGluaywgSW9uUm91dGVyTGlua1dpdGhIcmVmIH0gZnJvbSAnLi9uYXZpZ2F0aW9uL3JvdXRlci1saW5rLWRlbGVnYXRlJztcbmV4cG9ydCB7IElvblRhYnMgfSBmcm9tICcuL25hdmlnYXRpb24vdGFicyc7XG5leHBvcnQgeyBwcm92aWRlSW9uaWNBbmd1bGFyIH0gZnJvbSAnLi9wcm92aWRlcnMvaW9uaWMtYW5ndWxhcic7XG5leHBvcnQgeyBBY3Rpb25TaGVldENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9hY3Rpb24tc2hlZXQtY29udHJvbGxlcic7XG5leHBvcnQgeyBBbGVydENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9hbGVydC1jb250cm9sbGVyJztcbmV4cG9ydCB7IEFuaW1hdGlvbkNvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9hbmltYXRpb24tY29udHJvbGxlcic7XG5leHBvcnQgeyBHZXN0dXJlQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2dlc3R1cmUtY29udHJvbGxlcic7XG5leHBvcnQgeyBMb2FkaW5nQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2xvYWRpbmctY29udHJvbGxlcic7XG5leHBvcnQgeyBNZW51Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL21lbnUtY29udHJvbGxlcic7XG5leHBvcnQgeyBNb2RhbENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9tb2RhbC1jb250cm9sbGVyJztcbmV4cG9ydCB7IFBpY2tlckNvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy9waWNrZXItY29udHJvbGxlcic7XG5leHBvcnQgeyBQb3BvdmVyQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL3BvcG92ZXItY29udHJvbGxlcic7XG5leHBvcnQgeyBUb2FzdENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb3ZpZGVycy90b2FzdC1jb250cm9sbGVyJztcbmV4cG9ydCB7XG4gIERvbUNvbnRyb2xsZXIsXG4gIE5hdkNvbnRyb2xsZXIsXG4gIENvbmZpZyxcbiAgUGxhdGZvcm0sXG4gIE5hdlBhcmFtcyxcbiAgSW9uaWNSb3V0ZVN0cmF0ZWd5LFxuICBWaWV3V2lsbEVudGVyLFxuICBWaWV3RGlkRW50ZXIsXG4gIFZpZXdXaWxsTGVhdmUsXG4gIFZpZXdEaWRMZWF2ZSxcbn0gZnJvbSAnQGlvbmljL2FuZ3VsYXIvY29tbW9uJztcbmV4cG9ydCB7IElvbk5hdiB9IGZyb20gJy4vbmF2aWdhdGlvbi9uYXYnO1xuZXhwb3J0IHtcbiAgSW9uQ2hlY2tib3gsXG4gIElvbkRhdGV0aW1lLFxuICBJb25JbnB1dCxcbiAgSW9uSW5wdXRPdHAsXG4gIElvbkljb24sXG4gIElvblJhZGlvR3JvdXAsXG4gIElvblJhbmdlLFxuICBJb25TZWFyY2hiYXIsXG4gIElvblNlZ21lbnQsXG4gIElvblNlbGVjdCxcbiAgSW9uVGV4dGFyZWEsXG4gIElvblRvZ2dsZSxcbn0gZnJvbSAnLi9kaXJlY3RpdmVzJztcbmV4cG9ydCAqIGZyb20gJy4vZGlyZWN0aXZlcy9wcm94aWVzJztcblxuZXhwb3J0IHtcbiAgLy8gVVRJTFNcbiAgY3JlYXRlQW5pbWF0aW9uLFxuICBjcmVhdGVHZXN0dXJlLFxuICBpb3NUcmFuc2l0aW9uQW5pbWF0aW9uLFxuICBtZFRyYW5zaXRpb25BbmltYXRpb24sXG4gIElvbmljU2xpZGVzLFxuICBnZXRQbGF0Zm9ybXMsXG4gIGlzUGxhdGZvcm0sXG4gIGdldFRpbWVHaXZlblByb2dyZXNzaW9uLFxuICAvLyBUWVBFU1xuICBBbmltYXRpb24sXG4gIEFuaW1hdGlvbkJ1aWxkZXIsXG4gIEFuaW1hdGlvbkNhbGxiYWNrT3B0aW9ucyxcbiAgQW5pbWF0aW9uRGlyZWN0aW9uLFxuICBBbmltYXRpb25GaWxsLFxuICBBbmltYXRpb25LZXlGcmFtZXMsXG4gIEFuaW1hdGlvbkxpZmVjeWNsZSxcbiAgR2VzdHVyZSxcbiAgR2VzdHVyZUNvbmZpZyxcbiAgR2VzdHVyZURldGFpbCxcbiAgTmF2Q29tcG9uZW50V2l0aFByb3BzLFxuICBTcGlubmVyVHlwZXMsXG4gIEFjY29yZGlvbkdyb3VwQ3VzdG9tRXZlbnQsXG4gIEFjY29yZGlvbkdyb3VwQ2hhbmdlRXZlbnREZXRhaWwsXG4gIEJyZWFkY3J1bWJDdXN0b21FdmVudCxcbiAgQnJlYWRjcnVtYkNvbGxhcHNlZENsaWNrRXZlbnREZXRhaWwsXG4gIEFjdGlvblNoZWV0T3B0aW9ucyxcbiAgQWN0aW9uU2hlZXRCdXR0b24sXG4gIEFsZXJ0T3B0aW9ucyxcbiAgQWxlcnRJbnB1dCxcbiAgQWxlcnRCdXR0b24sXG4gIEJhY2tCdXR0b25FdmVudCxcbiAgQ2hlY2tib3hDdXN0b21FdmVudCxcbiAgQ2hlY2tib3hDaGFuZ2VFdmVudERldGFpbCxcbiAgRGF0ZXRpbWVDdXN0b21FdmVudCxcbiAgRGF0ZXRpbWVDaGFuZ2VFdmVudERldGFpbCxcbiAgSW5maW5pdGVTY3JvbGxDdXN0b21FdmVudCxcbiAgSW5wdXRDdXN0b21FdmVudCxcbiAgSW5wdXRDaGFuZ2VFdmVudERldGFpbCxcbiAgSW5wdXRPdHBDdXN0b21FdmVudCxcbiAgSW5wdXRPdHBDaGFuZ2VFdmVudERldGFpbCxcbiAgSW5wdXRPdHBDb21wbGV0ZUV2ZW50RGV0YWlsLFxuICBJbnB1dE90cElucHV0RXZlbnREZXRhaWwsXG4gIEl0ZW1SZW9yZGVyRXZlbnREZXRhaWwsXG4gIEl0ZW1SZW9yZGVyQ3VzdG9tRXZlbnQsXG4gIEl0ZW1TbGlkaW5nQ3VzdG9tRXZlbnQsXG4gIElvbmljU2FmZVN0cmluZyxcbiAgTG9hZGluZ09wdGlvbnMsXG4gIE1lbnVDdXN0b21FdmVudCxcbiAgTW9kYWxPcHRpb25zLFxuICBOYXZDdXN0b21FdmVudCxcbiAgUGlja2VyT3B0aW9ucyxcbiAgUGlja2VyQnV0dG9uLFxuICBQaWNrZXJDb2x1bW4sXG4gIFBpY2tlckNvbHVtbk9wdGlvbixcbiAgUGxhdGZvcm1Db25maWcsXG4gIFBvcG92ZXJPcHRpb25zLFxuICBSYWRpb0dyb3VwQ3VzdG9tRXZlbnQsXG4gIFJhZGlvR3JvdXBDaGFuZ2VFdmVudERldGFpbCxcbiAgUmFuZ2VDdXN0b21FdmVudCxcbiAgUmFuZ2VDaGFuZ2VFdmVudERldGFpbCxcbiAgUmFuZ2VLbm9iTW92ZVN0YXJ0RXZlbnREZXRhaWwsXG4gIFJhbmdlS25vYk1vdmVFbmRFdmVudERldGFpbCxcbiAgUmVmcmVzaGVyQ3VzdG9tRXZlbnQsXG4gIFJlZnJlc2hlckV2ZW50RGV0YWlsLFxuICBSb3V0ZXJFdmVudERldGFpbCxcbiAgUm91dGVyQ3VzdG9tRXZlbnQsXG4gIFNjcm9sbEJhc2VDdXN0b21FdmVudCxcbiAgU2Nyb2xsQmFzZURldGFpbCxcbiAgU2Nyb2xsRGV0YWlsLFxuICBTY3JvbGxDdXN0b21FdmVudCxcbiAgU2VhcmNoYmFyQ3VzdG9tRXZlbnQsXG4gIFNlYXJjaGJhckNoYW5nZUV2ZW50RGV0YWlsLFxuICBTZWFyY2hiYXJJbnB1dEV2ZW50RGV0YWlsLFxuICBTZWdtZW50Q2hhbmdlRXZlbnREZXRhaWwsXG4gIFNlZ21lbnRDdXN0b21FdmVudCxcbiAgU2VnbWVudFZhbHVlLFxuICBTZWxlY3RDaGFuZ2VFdmVudERldGFpbCxcbiAgU2VsZWN0Q3VzdG9tRXZlbnQsXG4gIFRhYnNDdXN0b21FdmVudCxcbiAgVGV4dGFyZWFDaGFuZ2VFdmVudERldGFpbCxcbiAgVGV4dGFyZWFDdXN0b21FdmVudCxcbiAgVG9hc3RPcHRpb25zLFxuICBUb2FzdEJ1dHRvbixcbiAgVG9hc3RMYXlvdXQsXG4gIFRvZ2dsZUNoYW5nZUV2ZW50RGV0YWlsLFxuICBUb2dnbGVDdXN0b21FdmVudCxcbn0gZnJvbSAnQGlvbmljL2NvcmUvY29tcG9uZW50cyc7XG4iXX0=