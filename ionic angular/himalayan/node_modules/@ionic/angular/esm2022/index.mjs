// DIRECTIVES
export { BooleanValueAccessorDirective as BooleanValueAccessor } from './directives/control-value-accessors/boolean-value-accessor';
export { NumericValueAccessorDirective as NumericValueAccessor } from './directives/control-value-accessors/numeric-value-accessor';
export { SelectValueAccessorDirective as SelectValueAccessor } from './directives/control-value-accessors/select-value-accessor';
export { TextValueAccessorDirective as TextValueAccessor } from './directives/control-value-accessors/text-value-accessor';
export { IonTabs } from './directives/navigation/ion-tabs';
export { IonBackButton } from './directives/navigation/ion-back-button';
export { IonNav } from './directives/navigation/ion-nav';
export { IonRouterOutlet } from './directives/navigation/ion-router-outlet';
export { RouterLinkDelegateDirective as RouterLinkDelegate, RouterLinkWithHrefDelegateDirective as RouterLinkWithHrefDelegate, } from './directives/navigation/router-link-delegate';
export { IonModal } from './directives/overlays/modal';
export { IonPopover } from './directives/overlays/popover';
export * from './directives/proxies';
export * from './directives/validators';
// PROVIDERS
export { DomController, NavController, Config, Platform, AngularDelegate, NavParams, IonicRouteStrategy, } from '@ionic/angular/common';
export { AlertController } from './providers/alert-controller';
export { AnimationController } from './providers/animation-controller';
export { ActionSheetController } from './providers/action-sheet-controller';
export { GestureController } from './providers/gesture-controller';
export { LoadingController } from './providers/loading-controller';
export { MenuController } from './providers/menu-controller';
export { ModalController } from './providers/modal-controller';
export { PickerController } from './providers/picker-controller';
export { PopoverController } from './providers/popover-controller';
export { ToastController } from './providers/toast-controller';
// PACKAGE MODULE
export { IonicModule } from './ionic-module';
export { 
// UTILS
createAnimation, createGesture, iosTransitionAnimation, mdTransitionAnimation, IonicSlides, getPlatforms, isPlatform, getTimeGivenProgression, getIonPageElement, IonicSafeString, openURL, } from '@ionic/core';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYTtBQUNiLE9BQU8sRUFBRSw2QkFBNkIsSUFBSSxvQkFBb0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3BJLE9BQU8sRUFBRSw2QkFBNkIsSUFBSSxvQkFBb0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3BJLE9BQU8sRUFBRSw0QkFBNEIsSUFBSSxtQkFBbUIsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ2pJLE9BQU8sRUFBRSwwQkFBMEIsSUFBSSxpQkFBaUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQzNILE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDeEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUM1RSxPQUFPLEVBQ0wsMkJBQTJCLElBQUksa0JBQWtCLEVBQ2pELG1DQUFtQyxJQUFJLDBCQUEwQixHQUNsRSxNQUFNLDhDQUE4QyxDQUFDO0FBRXRELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLHlCQUF5QixDQUFDO0FBRXhDLFlBQVk7QUFDWixPQUFPLEVBQ0wsYUFBYSxFQUNiLGFBQWEsRUFDYixNQUFNLEVBQ04sUUFBUSxFQUNSLGVBQWUsRUFDZixTQUFTLEVBQ1Qsa0JBQWtCLEdBS25CLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRS9ELGlCQUFpQjtBQUNqQixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTztBQUNMLFFBQVE7QUFDUixlQUFlLEVBQ2YsYUFBYSxFQUNiLHNCQUFzQixFQUN0QixxQkFBcUIsRUFDckIsV0FBVyxFQUNYLFlBQVksRUFDWixVQUFVLEVBQ1YsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQXNDakIsZUFBZSxFQTBDZixPQUFPLEdBQ1IsTUFBTSxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBESVJFQ1RJVkVTXG5leHBvcnQgeyBCb29sZWFuVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBCb29sZWFuVmFsdWVBY2Nlc3NvciB9IGZyb20gJy4vZGlyZWN0aXZlcy9jb250cm9sLXZhbHVlLWFjY2Vzc29ycy9ib29sZWFuLXZhbHVlLWFjY2Vzc29yJztcbmV4cG9ydCB7IE51bWVyaWNWYWx1ZUFjY2Vzc29yRGlyZWN0aXZlIGFzIE51bWVyaWNWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NvbnRyb2wtdmFsdWUtYWNjZXNzb3JzL251bWVyaWMtdmFsdWUtYWNjZXNzb3InO1xuZXhwb3J0IHsgU2VsZWN0VmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBTZWxlY3RWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NvbnRyb2wtdmFsdWUtYWNjZXNzb3JzL3NlbGVjdC12YWx1ZS1hY2Nlc3Nvcic7XG5leHBvcnQgeyBUZXh0VmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSBhcyBUZXh0VmFsdWVBY2Nlc3NvciB9IGZyb20gJy4vZGlyZWN0aXZlcy9jb250cm9sLXZhbHVlLWFjY2Vzc29ycy90ZXh0LXZhbHVlLWFjY2Vzc29yJztcbmV4cG9ydCB7IElvblRhYnMgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi9pb24tdGFicyc7XG5leHBvcnQgeyBJb25CYWNrQnV0dG9uIH0gZnJvbSAnLi9kaXJlY3RpdmVzL25hdmlnYXRpb24vaW9uLWJhY2stYnV0dG9uJztcbmV4cG9ydCB7IElvbk5hdiB9IGZyb20gJy4vZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL2lvbi1uYXYnO1xuZXhwb3J0IHsgSW9uUm91dGVyT3V0bGV0IH0gZnJvbSAnLi9kaXJlY3RpdmVzL25hdmlnYXRpb24vaW9uLXJvdXRlci1vdXRsZXQnO1xuZXhwb3J0IHtcbiAgUm91dGVyTGlua0RlbGVnYXRlRGlyZWN0aXZlIGFzIFJvdXRlckxpbmtEZWxlZ2F0ZSxcbiAgUm91dGVyTGlua1dpdGhIcmVmRGVsZWdhdGVEaXJlY3RpdmUgYXMgUm91dGVyTGlua1dpdGhIcmVmRGVsZWdhdGUsXG59IGZyb20gJy4vZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL3JvdXRlci1saW5rLWRlbGVnYXRlJztcblxuZXhwb3J0IHsgSW9uTW9kYWwgfSBmcm9tICcuL2RpcmVjdGl2ZXMvb3ZlcmxheXMvbW9kYWwnO1xuZXhwb3J0IHsgSW9uUG9wb3ZlciB9IGZyb20gJy4vZGlyZWN0aXZlcy9vdmVybGF5cy9wb3BvdmVyJztcbmV4cG9ydCAqIGZyb20gJy4vZGlyZWN0aXZlcy9wcm94aWVzJztcbmV4cG9ydCAqIGZyb20gJy4vZGlyZWN0aXZlcy92YWxpZGF0b3JzJztcblxuLy8gUFJPVklERVJTXG5leHBvcnQge1xuICBEb21Db250cm9sbGVyLFxuICBOYXZDb250cm9sbGVyLFxuICBDb25maWcsXG4gIFBsYXRmb3JtLFxuICBBbmd1bGFyRGVsZWdhdGUsXG4gIE5hdlBhcmFtcyxcbiAgSW9uaWNSb3V0ZVN0cmF0ZWd5LFxuICBWaWV3V2lsbEVudGVyLFxuICBWaWV3V2lsbExlYXZlLFxuICBWaWV3RGlkRW50ZXIsXG4gIFZpZXdEaWRMZWF2ZSxcbn0gZnJvbSAnQGlvbmljL2FuZ3VsYXIvY29tbW9uJztcbmV4cG9ydCB7IEFsZXJ0Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2FsZXJ0LWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgQW5pbWF0aW9uQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2FuaW1hdGlvbi1jb250cm9sbGVyJztcbmV4cG9ydCB7IEFjdGlvblNoZWV0Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2FjdGlvbi1zaGVldC1jb250cm9sbGVyJztcbmV4cG9ydCB7IEdlc3R1cmVDb250cm9sbGVyIH0gZnJvbSAnLi9wcm92aWRlcnMvZ2VzdHVyZS1jb250cm9sbGVyJztcbmV4cG9ydCB7IExvYWRpbmdDb250cm9sbGVyIH0gZnJvbSAnLi9wcm92aWRlcnMvbG9hZGluZy1jb250cm9sbGVyJztcbmV4cG9ydCB7IE1lbnVDb250cm9sbGVyIH0gZnJvbSAnLi9wcm92aWRlcnMvbWVudS1jb250cm9sbGVyJztcbmV4cG9ydCB7IE1vZGFsQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL21vZGFsLWNvbnRyb2xsZXInO1xuZXhwb3J0IHsgUGlja2VyQ29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL3BpY2tlci1jb250cm9sbGVyJztcbmV4cG9ydCB7IFBvcG92ZXJDb250cm9sbGVyIH0gZnJvbSAnLi9wcm92aWRlcnMvcG9wb3Zlci1jb250cm9sbGVyJztcbmV4cG9ydCB7IFRvYXN0Q29udHJvbGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL3RvYXN0LWNvbnRyb2xsZXInO1xuXG4vLyBQQUNLQUdFIE1PRFVMRVxuZXhwb3J0IHsgSW9uaWNNb2R1bGUgfSBmcm9tICcuL2lvbmljLW1vZHVsZSc7XG5cbmV4cG9ydCB7XG4gIC8vIFVUSUxTXG4gIGNyZWF0ZUFuaW1hdGlvbixcbiAgY3JlYXRlR2VzdHVyZSxcbiAgaW9zVHJhbnNpdGlvbkFuaW1hdGlvbixcbiAgbWRUcmFuc2l0aW9uQW5pbWF0aW9uLFxuICBJb25pY1NsaWRlcyxcbiAgZ2V0UGxhdGZvcm1zLFxuICBpc1BsYXRmb3JtLFxuICBnZXRUaW1lR2l2ZW5Qcm9ncmVzc2lvbixcbiAgZ2V0SW9uUGFnZUVsZW1lbnQsXG4gIC8vIFRZUEVTXG4gIEFuaW1hdGlvbixcbiAgQW5pbWF0aW9uQnVpbGRlcixcbiAgQW5pbWF0aW9uQ2FsbGJhY2tPcHRpb25zLFxuICBBbmltYXRpb25EaXJlY3Rpb24sXG4gIEFuaW1hdGlvbkZpbGwsXG4gIEFuaW1hdGlvbktleUZyYW1lcyxcbiAgQW5pbWF0aW9uTGlmZWN5Y2xlLFxuICBHZXN0dXJlLFxuICBHZXN0dXJlQ29uZmlnLFxuICBHZXN0dXJlRGV0YWlsLFxuICBOYXZDb21wb25lbnRXaXRoUHJvcHMsXG4gIFNwaW5uZXJUeXBlcyxcbiAgQWNjb3JkaW9uR3JvdXBDdXN0b21FdmVudCxcbiAgQWNjb3JkaW9uR3JvdXBDaGFuZ2VFdmVudERldGFpbCxcbiAgQnJlYWRjcnVtYkN1c3RvbUV2ZW50LFxuICBCcmVhZGNydW1iQ29sbGFwc2VkQ2xpY2tFdmVudERldGFpbCxcbiAgQWN0aW9uU2hlZXRPcHRpb25zLFxuICBBY3Rpb25TaGVldEJ1dHRvbixcbiAgQWxlcnRPcHRpb25zLFxuICBBbGVydElucHV0LFxuICBBbGVydEJ1dHRvbixcbiAgQmFja0J1dHRvbkV2ZW50LFxuICBDaGVja2JveEN1c3RvbUV2ZW50LFxuICBDaGVja2JveENoYW5nZUV2ZW50RGV0YWlsLFxuICBEYXRldGltZUN1c3RvbUV2ZW50LFxuICBEYXRldGltZUNoYW5nZUV2ZW50RGV0YWlsLFxuICBJbmZpbml0ZVNjcm9sbEN1c3RvbUV2ZW50LFxuICBJbnB1dEN1c3RvbUV2ZW50LFxuICBJbnB1dENoYW5nZUV2ZW50RGV0YWlsLFxuICBJbnB1dE90cEN1c3RvbUV2ZW50LFxuICBJbnB1dE90cENoYW5nZUV2ZW50RGV0YWlsLFxuICBJbnB1dE90cENvbXBsZXRlRXZlbnREZXRhaWwsXG4gIElucHV0T3RwSW5wdXRFdmVudERldGFpbCxcbiAgSXRlbVJlb3JkZXJFdmVudERldGFpbCxcbiAgSXRlbVJlb3JkZXJDdXN0b21FdmVudCxcbiAgSXRlbVNsaWRpbmdDdXN0b21FdmVudCxcbiAgSW9uaWNTYWZlU3RyaW5nLFxuICBMb2FkaW5nT3B0aW9ucyxcbiAgTWVudUN1c3RvbUV2ZW50LFxuICBNb2RhbE9wdGlvbnMsXG4gIE5hdkN1c3RvbUV2ZW50LFxuICBQaWNrZXJPcHRpb25zLFxuICBQaWNrZXJCdXR0b24sXG4gIFBpY2tlckNvbHVtbixcbiAgUGlja2VyQ29sdW1uT3B0aW9uLFxuICBQbGF0Zm9ybUNvbmZpZyxcbiAgUG9wb3Zlck9wdGlvbnMsXG4gIFJhZGlvR3JvdXBDdXN0b21FdmVudCxcbiAgUmFkaW9Hcm91cENoYW5nZUV2ZW50RGV0YWlsLFxuICBSYW5nZUN1c3RvbUV2ZW50LFxuICBSYW5nZUNoYW5nZUV2ZW50RGV0YWlsLFxuICBSYW5nZUtub2JNb3ZlU3RhcnRFdmVudERldGFpbCxcbiAgUmFuZ2VLbm9iTW92ZUVuZEV2ZW50RGV0YWlsLFxuICBSZWZyZXNoZXJDdXN0b21FdmVudCxcbiAgUmVmcmVzaGVyRXZlbnREZXRhaWwsXG4gIFJvdXRlckV2ZW50RGV0YWlsLFxuICBSb3V0ZXJDdXN0b21FdmVudCxcbiAgU2Nyb2xsQmFzZUN1c3RvbUV2ZW50LFxuICBTY3JvbGxCYXNlRGV0YWlsLFxuICBTY3JvbGxEZXRhaWwsXG4gIFNjcm9sbEN1c3RvbUV2ZW50LFxuICBTZWFyY2hiYXJDdXN0b21FdmVudCxcbiAgU2VhcmNoYmFyQ2hhbmdlRXZlbnREZXRhaWwsXG4gIFNlYXJjaGJhcklucHV0RXZlbnREZXRhaWwsXG4gIFNlZ21lbnRDaGFuZ2VFdmVudERldGFpbCxcbiAgU2VnbWVudEN1c3RvbUV2ZW50LFxuICBTZWdtZW50VmFsdWUsXG4gIFNlbGVjdENoYW5nZUV2ZW50RGV0YWlsLFxuICBTZWxlY3RDdXN0b21FdmVudCxcbiAgVGFic0N1c3RvbUV2ZW50LFxuICBUZXh0YXJlYUNoYW5nZUV2ZW50RGV0YWlsLFxuICBUZXh0YXJlYUN1c3RvbUV2ZW50LFxuICBUb2FzdE9wdGlvbnMsXG4gIFRvYXN0QnV0dG9uLFxuICBUb2FzdExheW91dCxcbiAgVG9nZ2xlQ2hhbmdlRXZlbnREZXRhaWwsXG4gIFRvZ2dsZUN1c3RvbUV2ZW50LFxuICBUcmFuc2l0aW9uT3B0aW9ucyxcbiAgb3BlblVSTCxcbn0gZnJvbSAnQGlvbmljL2NvcmUnO1xuIl19